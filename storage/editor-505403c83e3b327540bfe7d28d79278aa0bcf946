{"mode":"editor","version":1,"windowDimensions":{"x":1978,"y":71,"width":1543,"height":1101,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["c:\\Users\\LESANC~1\\AppData\\Local\\Temp\\scp15188\\home\\ec2-user\\webapp\\routes"],"buffers":[{"text":"var async  = require('async');\r\nvar _ = require('underscore');\r\nvar ay = require('../utils/ay');\r\nvar Deferred = require('JQDeferred');\r\nvar redisCli = require('redis').createClient();\r\nvar crud = require('../models/crud');\r\n\r\n// 画像保存パス定義\r\nvar PUBLIC_PATH = 'public';\r\nvar THUMB_PATH = '/img/thumbs/'; // 後にsite文字列をconcatする ex) thumbs/fc2/\r\n\r\n// 総合、新着ランキングのString\r\nvar NAME_GENGERAL_CATEGORIES = '全カテゴリ';\r\nvar PARAMS_GENGERAL = NAME_GENGERAL_CATEGORIES; // getリクエスト時に全カテゴリを示す文字列\r\n\r\n// テキスト用の人気カテゴリをいくつまでとってくるか\r\nvar MAX_POPULAR_CATEGORY_NUM = 35;\r\n// (TOPページ専用)人気カテゴリboxをいくつ表示するか\r\nvar MAX_POPULAR_CATEGORY_BOX_NUM = 10;\r\n// (TOPページ)全カテゴリでいくつビデオを読み込むか\r\nvar MAX_TOP_GENERAL_VIDEO_NUM = 10;\r\n// (TOPページ)各カテゴリでいくつずつビデオを読み込むか\r\nvar MAX_TOP_CATEGORY_VIDEO_NUM = 15;\r\n// 「関連動画（オススメ）」をいくつまでとってくるか\r\nvar MAX_RECOMMEND_NUM = 60;\r\n// ピックアップに何本表示するか\r\nvar PICKUP_VIDEOS_NUM = 4;\r\n// 一時データをどの程度保存しておくか\r\nvar DURATION_TMP_FORM = 60 * 60 * 24;\r\n\r\nexports.index = function(req, res) {\r\n\t// 人気カテゴリ５つくらいboxを用意して、そこへ１０本くらいずつデータを流す\r\n\tvar popularCategories;\r\n\tvar categoryDeferred = new Deferred();\r\n\tvar data = {}; // テンプレートに渡すobject\r\n\r\n\tcrud.findPopularCategories({ limit: MAX_POPULAR_CATEGORY_NUM }, function(err, rows) {\r\n\t\tif (err) {\r\n\t\t\tres.redirect(500, '/error?message=' + err);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// rowsを整形して、人気カテゴリ配列にする\r\n\t\tvar popularCategoriesArr = _.pluck(rows, 'name');\r\n\r\n\t\t// カテゴリ表示用の配列と、動画取得用の配列に分ける\r\n\t\tdata.popularCategories = popularCategoriesArr;\r\n\t\tpopularCategories = _.first(popularCategoriesArr, MAX_POPULAR_CATEGORY_BOX_NUM);\r\n\r\n\t\tcategoryDeferred.resolve();\r\n\t});\r\n\r\n\tcategoryDeferred.done(function() {\r\n\t\t// 総合新着\r\n\t\tvar generalRanking = function(cb) {\r\n\t\t\tcrud.findAll({ where: 'v.is_deleted = 0', limit: MAX_TOP_GENERAL_VIDEO_NUM }, function(err, rows) {\r\n\t\t\t\tif (err) return cb(err);\r\n\r\n\t\t\t\tay.prettyRows(rows);\r\n\t\t\t\tcb(null, rows);\r\n\t\t\t});\r\n\t\t};\r\n\t\t// カテゴリ別新着\r\n\t\tvar categoryRanking = _.map(popularCategories, function(category) {\r\n\t\t\treturn function(cb) {\r\n\t\t\t\tcrud.findAllByCategory(category, { where: 'v.is_deleted = 0', limit: MAX_TOP_CATEGORY_VIDEO_NUM }, function(err, rows) {\r\n\t\t\t\t\tif (err) return cb(err);\r\n\r\n\t\t\t\t\tay.prettyRows(rows);\r\n\t\t\t\t\tcb(null, rows);\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t});\r\n\t\t// async.parallelの引数となる関数を生成する\r\n\t\tvar functions = _.union([generalRanking], categoryRanking);\r\n\r\n\t\tasync.parallel(\r\n\t\t\tfunctions,\r\n\t\t\tfunction(err, results) {\r\n\t\t\t\tif (err) {\r\n\t\t\t\t\tres.redirect(500, '/error?message=' + err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 総合。parallelで配列で引数渡しているのでresults[0]に必ず総合ランキングが入る\r\n\t\t\t\tdata.general = results.shift();\r\n\t\t\t\tdata.generalRankingName = NAME_GENGERAL_CATEGORIES;\r\n\t\t\t\t// 1度表示した物は再度表示しない（先出優先）。まずは全カテゴリのIDリストを取得\r\n\t\t\t\tvar videoIdList = {};\r\n\t\t\t\t_.each(_.pluck(data.general, 'id'), function(id) {\r\n\t\t\t\t\tvideoIdList[id] = true;\r\n\t\t\t\t});\r\n\t\t\t\t// カテゴリ別\r\n\t\t\t\tdata.categories = [];\r\n\t\t\t\t_.each(results, function(rows, key) {\r\n\t\t\t\t\trows = _.reject(rows, function(row) {\r\n\t\t\t\t\t\tif (_.has(videoIdList, row.id)) {\r\n\t\t\t\t\t\t\treturn true; // IDリストに存在したらreject\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tvideoIdList[row.id] = true; // 存在しなければIDリストに追加\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\tdata.categories[key] = { name: popularCategories[key], rows: rows };\r\n\t\t\t\t});\r\n\r\n\t\t\t\tres.render('index', data);\r\n\t\t\t}\r\n\t\t);\r\n\t});\r\n};\r\n\r\n\r\n// 新着順に動画を取得\r\nvar readNewVideos = function(categoryName, page, readDeferred) {\r\n\t// 全カテゴリあるいは各カテゴリから新着を選ぶ\r\n\tif (categoryName === PARAMS_GENGERAL) {\r\n\t\tcategoryName = NAME_GENGERAL_CATEGORIES;\r\n\t\tcrud.findAll({ order: 'v.id', page: page, where: 'v.is_deleted = 0' }, function(err, rows) {\r\n\t\t\tif (err) return readDeferred.reject(err);\r\n\t\t\treadDeferred.resolve(rows);\r\n\t\t});\r\n\t} else {\r\n\t\tcrud.findAllByCategory(categoryName, { order: 'v.id', page: page, where: 'v.is_deleted = 0' }, function(err, rows) {\r\n\t\t\tif (err) return readDeferred.reject(err);\r\n\t\t\treadDeferred.resolve(rows);\r\n\t\t});\r\n\t}\r\n};\r\nexports.videosNew = function(req, res) {\r\n\tvar categoryName = req.params.categoryName;\r\n\tvar page = (req.query.page) ? req.query.page : 1;\r\n\tvar readDeferred = new Deferred();\r\n\tvar categoryDeferred = new Deferred();\r\n\r\n\treadNewVideos(categoryName, page, readDeferred);\r\n\r\n\tcrud.findPopularCategories({ limit: MAX_POPULAR_CATEGORY_NUM }, function(err, rows) {\r\n\t\tif (err) return categoryDeferred.reject(err);\r\n\r\n\t\t// rowsを整形して、人気カテゴリ配列にする\r\n\t\tcategoryDeferred.resolve(_.pluck(rows, 'name'));\r\n\t});\r\n\r\n\tDeferred.when(readDeferred, categoryDeferred)\r\n\t\t.done(function(rows, popularCategories) {\r\n\t\t\tay.prettyRows(rows);\r\n\t\t\tres.render('videosCategory', {\r\n\t\t\t\ttype: 'v.id',\r\n\t\t\t\tcategoryName: categoryName,\r\n\t\t\t\trows: rows,\r\n\t\t\t\tpopularCategories: popularCategories\r\n\t\t\t});\r\n\t\t})\r\n\t\t.fail(function(err) {\r\n\t\t\tres.redirect(500, '/error?message=' + err);\r\n\t\t});\r\n};\r\n// AJAXローディングに使う。重複多いのでどうにかしたい。\r\nexports.videosNewLoad = function(req, res) {\r\n\tvar categoryName = req.params.categoryName;\r\n\tvar page = req.query.page;\r\n\tvar readDeferred = new Deferred();\r\n\r\n\treadNewVideos(categoryName, page, readDeferred);\r\n\r\n\treadDeferred\r\n\t\t.done(function(rows) {\r\n\t\t\tay.prettyRows(rows);\r\n\t\t\tres.render('inc_box_videos_rows', { rows: rows });\r\n\t\t})\r\n\t\t.fail(function(err) {\r\n\t\t\tres.redirect(500, '/error?message=' + err);\r\n\t\t});\r\n};\r\n\r\n\r\n// カテゴリ別動画一覧（総合人気ランキングも含む）\r\nvar readPopularVideos = function(categoryName, order, page, readDeferred) {\r\n\tif (categoryName === PARAMS_GENGERAL) {\r\n\t\tcategoryName = NAME_GENGERAL_CATEGORIES;\r\n\t\tcrud.findAll({ order: order, page: page, where: 'v.is_deleted = 0' }, function(err, rows) {\r\n\t\t\tif (err) return readDeferred.reject(err);\r\n\t\t\treadDeferred.resolve(rows);\r\n\t\t});\r\n\t} else {\r\n\t\tcrud.findAllByCategory(categoryName, { order: order, page: page, where: 'v.is_deleted = 0' }, function(err, rows) {\r\n\t\t\tif (err) return readDeferred.reject(err);\r\n\t\t\treadDeferred.resolve(rows);\r\n\t\t});\r\n\t}\r\n};\r\nexports.videosPopular = function(req, res) {\r\n\tvar categoryName = req.params.categoryName;\r\n\tvar order = ay.convertTermToQuery(req.query.term);\r\n\tvar page = (req.query.page) ? req.query.page : 1;\r\n\tvar readDeferred = new Deferred();\r\n\tvar categoryDeferred = new Deferred();\r\n\r\n\treadPopularVideos(categoryName, order, page, readDeferred);\r\n\r\n\tcrud.findPopularCategories({ limit: MAX_POPULAR_CATEGORY_NUM }, function(err, rows) {\r\n\t\tif (err) return categoryDeferred.reject(err);\r\n\r\n\t\t// rowsを整形して、人気カテゴリ配列にする\r\n\t\tcategoryDeferred.resolve(_.pluck(rows, 'name'));\r\n\t});\r\n\r\n\t// DBから取得が終わったら。\r\n\tDeferred.when(readDeferred, categoryDeferred)\r\n\t\t.done(function(rows, popularCategories) {\r\n\t\t\tay.prettyRows(rows);\r\n\t\t\tres.render('videosCategory', {\r\n\t\t\t\ttype: order,\r\n\t\t\t\tcategoryName: categoryName,\r\n\t\t\t\trows: rows,\r\n\t\t\t\tpopularCategories: popularCategories\r\n\t\t\t});\r\n\t\t})\r\n\t\t.fail(function(err) {\r\n\t\t\tres.redirect(500, '/error?message=' + err);\r\n\t\t});\r\n};\r\n// AJAXローディングに使う。重複多いのでどうにかしたい。\r\nexports.videosPopularLoad = function(req, res) {\r\n\tvar categoryName = req.params.categoryName;\r\n\tvar order = ay.convertTermToQuery(req.query.term);\r\n\tvar page = req.query.page;\r\n\tvar readDeferred = new Deferred();\r\n\r\n\treadPopularVideos(categoryName, order, page, readDeferred);\r\n\r\n\treadDeferred\r\n\t\t.done(function(rows) {\r\n\t\t\tay.prettyRows(rows);\r\n\t\t\tres.render('inc_box_videos_rows', { rows: rows });\r\n\t\t})\r\n\t\t.fail(function(err) {\r\n\t\t\tres.redirect(500, '/error?message=' + err);\r\n\t\t});\r\n};\r\n\r\n\r\n// 各動画閲覧ページ\r\nexports.watch = function(req, res) {\r\n\tvar TIMER_NAME_ALL = 'watchAll';\r\n\tvar TIMER_NAME_ASYNC_END = 'asyncEnd';\r\n\tvar TIMER_NAME_FIND = 'byId';\r\n\tvar TIMER_NAME_FIND_BY_CATEGORY = 'byCategory';\r\n\tconsole.time(TIMER_NAME_ALL);\r\n\tconsole.time(TIMER_NAME_ASYNC_END);\r\n\tvar videoID = req.params.videoID;\r\n\tvar categories = req.params.videoCategories;\r\n\tif (categories) categories = categories.split(',');\r\n\r\n\tasync.parallel([\r\n\t\t// ビデオ情報を取得\r\n\t\tfunction(cb) {\r\n\t\t\tconsole.time(TIMER_NAME_FIND);\r\n\t\t\tcrud.findVideo(videoID, function(err, rows) {\r\n\t\t\t\tif (err) return cb(err);\r\n\r\n\t\t\t\tay.prettyRows(rows);\r\n\t\t\t\tconsole.timeEnd(TIMER_NAME_FIND);\r\n\t\t\t\tcb(null, rows);\r\n\t\t\t});\r\n\t\t},\r\n\t\t// 関連動画情報を取得\r\n\t\tfunction(cb) {\r\n\t\t\tconsole.time(TIMER_NAME_FIND_BY_CATEGORY);\r\n\t\t\tcrud.findAllByCategory(categories, { where: 'v.is_deleted = 0', limit: MAX_RECOMMEND_NUM, order: 'v.id' }, function(err, rows) {\r\n\t\t\t\tif (err) return cb(err);\r\n\r\n\t\t\t\tay.prettyRows(rows);\r\n\t\t\t\tconsole.timeEnd(TIMER_NAME_FIND_BY_CATEGORY);\r\n\t\t\t\tcb(null, rows);\r\n\t\t\t});\r\n\t\t},\r\n\t\t// 人気カテゴリを取得\r\n\t\tfunction(cb) {\r\n\t\t\tcrud.findPopularCategories({ limit: MAX_POPULAR_CATEGORY_NUM }, function(err, rows) {\r\n\t\t\t\tif (err) return cb(err);\r\n\r\n\t\t\t\t// rowsを整形して、人気カテゴリ配列にする\r\n\t\t\t\tcb(null, _.pluck(rows, 'name'));\r\n\t\t\t});\r\n\t\t}\r\n\t], function(err, results) {\r\n\t\tif (err) {\r\n\t\t\tres.redirect(500, '/error?message=' + err);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconsole.timeEnd(TIMER_NAME_ASYNC_END);\r\n\r\n\t\t// 再生回数をカウントアップ（callbackを待つ必要が無いのでここで）\r\n\t\tcrud.incrView(videoID, function(err, result){ /* nothing todo */ });\r\n\t\t// 関連動画からwatch中の動画を削除\r\n\t\tvar watchVideo = results[0][0];\r\n\t\tvar relatedVideos = results[1];\r\n\t\t// 視聴中のビデオは関連動画から除外する\r\n\t\trelatedVideos = _.reject(relatedVideos, function(video) {\r\n\t\t\treturn video.id === watchVideo.id;\r\n\t\t});\r\n\t\t// 関連動画の中から数本をランダムに抽出して、first-viewに収める\r\n\t\tvar pickupVideos = _.chain(relatedVideos)\r\n\t\t\t.sample(PICKUP_VIDEOS_NUM)\r\n\t\t\t.value();\r\n\t\t// relatedVideosからピックアップビデオを除外\r\n\t\trelatedVideos = _.reject(relatedVideos, function(relatedVideo) {\r\n\t\t\tif (_.findWhere(pickupVideos, { id: relatedVideo.id })) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t});\r\n\r\n\t\tres.render('watch', { videoInfo: watchVideo, relatedInfo: relatedVideos, popularCategories: results[2], pickupVideos: pickupVideos });\r\n\t\tconsole.timeEnd(TIMER_NAME_ALL);\r\n\t});\r\n};\r\n\r\n\r\n// 動画URLフォームページ\r\nexports.addVideoURLForm = function(req, res) {\r\n\t\tres.render('addVideoURLForm');\r\n};\r\n\r\nexports.addVideoForm = function(req, res) {\r\n\tvar url = req.query.Url || '';\r\n\tvar siteTypeInt = ay.getSiteTypeInt(url);\r\n\r\n\t// Error処理\r\n\tif (siteTypeInt === -1) {\r\n\t\tvar message = '有効なURLを入力してください';\r\n\t\tres.redirect(302, '/add/video/url/form?message=' + message);\r\n\t}\r\n\r\n\t// この時点では登録確定していないので、UniqueIDをkeyにしてredisとかに一時保存\r\n\t// uniqueID: { site, url, thumbUrl, embedTag }\r\n\tvar uniqueID = ay.createUniqueID();\r\n\tvar redisData = {}; // redisにsetするobject\r\n\tvar videoData = {}; // urlをもとにfetchしたデータを入れる\r\n\tasync.parallel([\r\n\t\t// スクレイピングにより情報を取得\r\n\t\tfunction(cb) {\r\n\t\t\t// DEBUG\r\n\t\t\tredisData.site = siteTypeInt;\r\n\t\t\tay.fetchSite(siteTypeInt, url, videoData, cb);\r\n\t\t},\r\n\t\t// カテゴリのsuggestのためのデータを取得\r\n\t\tfunction(cb) {\r\n\t\t\tcrud.findPopularCategories({ limit: 100 }, function(err, rows) {\r\n\t\t\t\tif (err) return cb(err);\r\n\r\n\t\t\t\t// rowsを整形して、人気カテゴリ配列にする\r\n\t\t\t\tcb(null, _.pluck(rows, 'name'));\r\n\t\t\t});\r\n\t\t}\r\n\t], function(err, results) {\r\n\t\tif (err) {\r\n\t\t\tres.redirect(302, '/add/video/url/form?message=' + err);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// redisに一時保存データをset\r\n\t\tredisData.url = url;\r\n\t\tredisData.thumbUrl = videoData.thumbUrl;\r\n\t\tredisData.embedTag = videoData.embedTag;\r\n\t\tredisData.title = videoData.title;\r\n\t\tredisCli.set(uniqueID, JSON.stringify(redisData));\r\n\t\tredisCli.expire(uniqueID, DURATION_TMP_FORM);\r\n\r\n\t\t// 動画投稿フォームページ\r\n\t\tres.render('addVideoForm', {\r\n\t\t\tuniqueID: uniqueID,\r\n\t\t\turl: url,\r\n\t\t\tthumbUrl: videoData.thumbUrl,\r\n\t\t\tembedTag: videoData.embedTag,\r\n\t\t\ttitle: videoData.title,\r\n\t\t\tsite: ay.siteToChar(redisData.site),\r\n\t\t\tcategories: results[1]\r\n\t\t});\r\n\t});\r\n};\r\n\r\n\r\n// Videoの追加　TODO　新Categories\r\nexports.addVideo = function(req, res) {\r\n\t// これをキーにして一時保存情報を取り出す。\r\n\tvar uniqueID = req.params.uniqueID;\r\n\r\n\tconsole.log('req.body', req.body);\r\n\r\n\r\n\tif (!req.body.category) {\r\n\t\tvar message = 'カテゴリは必須入力です。';\r\n\t\tres.redirect(302, '/add/video/url/form?message=' + message);\r\n\t}\r\n\r\n\tasync.waterfall([\r\n\t\t// redisから一時保存データを取得\r\n\t\tfunction(cb) {\r\n\t\t\tredisCli.get(uniqueID, function(err, res) {\r\n\t\t\t\tif (err) return cb(err);\r\n\r\n\t\t\t\tcb(null, JSON.parse(res));\r\n\t\t\t});\r\n\t\t},\r\n\t\t// DBへ保存\r\n\t\tfunction(redisData, cb) {\r\n\t\t\tvar saveDir = THUMB_PATH + ay.siteToChar(redisData.site) + '/';\r\n\t\t\tvar thumbPath = saveDir + uniqueID + '.jpg';\r\n\t\t\t// titleが空で無ければそれを使う。\r\n\t\t\tif (req.body.title) redisData.title = req.body.title;\r\n\r\n\t\t\tcrud.saveVideo(redisData, thumbPath, req.body.comment, req.body.author, function(err, result) {\r\n\t\t\t\tif (err) return cb(err);\r\n\r\n\t\t\t\tvar thumbData = { thumbUrl: redisData.thumbUrl, thumbPath: thumbPath };\r\n\t\t\t\tcb(null, result.insertId, thumbData);\r\n\t\t\t});\r\n\t\t},\r\n\t\t// カテゴリテーブルへ保存\r\n\t\tfunction(insertId, thumbData, cb) {\r\n\t\t\t// カテゴリの整形\r\n\t\t\tvar categories = req.body.category.trim().replace(/　+/g,' ').replace(/ +/g,' ').split(' ');\r\n\t\t\tcategories = _.uniq(categories);\r\n\t\t\tvar values = _.map(categories, function(category) {return [insertId, category];});\r\n\r\n\t\t\tcrud.saveCategories(values, function(err, result) {\r\n\t\t\t\tif (err) return cb(err);\r\n\r\n\t\t\t\tcb(null, thumbData);\r\n\t\t\t});\r\n\t\t},\r\n\t\t// サムネイル画像を取得してディスクに保存\r\n\t\tfunction(thumbData, cb) {\r\n\t\t\tay.downloadBinary(thumbData.thumbUrl, PUBLIC_PATH + thumbData.thumbPath, function(isSuccess) {\r\n\t\t\t\tif (!isSuccess) return cb('サムネイル画像保存に失敗しました');\r\n\t\t\t\tcb(null);\r\n\t\t\t});\r\n\t\t}\r\n\t], function(err, result) {\r\n\t\tif (err) {\r\n\t\t\tres.redirect(302, '/add/video/url/form?message=' + err);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconsole.log('registered!!', result);\r\n\t\t// TODO どこに飛ばす？\r\n\t\tres.redirect(302, '/');\r\n\t});\r\n};\r\n\r\n\r\n// 汎用エラーページ\r\nexports.error = function(req, res) {\r\n\tconsole.log('###err: ', req.query.message);\r\n\tres.render('error');\r\n};\r\n","markers":{"markers":{"1":{"id":1,"range":[[5,37],[5,37]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":4,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"406":{"id":406,"range":[[1,0],[1,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"407":{"id":407,"range":[[295,0],[295,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"408":{"id":408,"range":[[424,0],[424,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"409":{"id":409,"range":[[428,0],[428,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"412":{"id":412,"range":[[16,24],[16,24]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"474":{"id":474,"range":[[424,61],[424,63]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"672":{"id":672,"range":[[424,59],[424,60]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"768":{"id":768,"range":[[424,61],[424,62]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"845":{"id":845,"range":[[424,78],[424,79]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"941":{"id":941,"range":[[424,80],[424,81]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"996":{"id":996,"range":[[295,0],[295,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"997":{"id":997,"range":[[428,0],[428,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"1008":{"id":1008,"range":[[5,37],[5,37]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"c:\\Users\\LESANC~1\\AppData\\Local\\Temp\\scp15188\\home\\ec2-user\\webapp\\routes\\index.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"cc31cd3862271a9b38e508e5c0d5a51a48ab61db","deserializer":"TextBuffer"},{"text":"var fs     = require('fs');\r\nvar http = require('http');\r\nvar _ = require('underscore');\r\nvar async  = require('async');\r\nvar scrapingClient = require('cheerio-httpcli');\r\nvar globalVar = require('./globalVar');\r\n\r\n// URLからクエリストリングを取得\r\nvar getQuerystring = function(url, key, default_) {\r\n  if (default_==null) default_=\"\";\r\n    key = key.replace(/[\\[]/,\"\\\\\\[\").replace(/[\\]]/,\"\\\\\\]\");\r\n    var regex = new RegExp(\"[\\\\?&]\"+key+\"=([^&#]*)\");\r\n    var qs = regex.exec(url);\r\n    if(qs == null)\r\n    return default_;\r\n  else\r\n    return qs[1];\r\n};\r\n\r\nvar unescapeHTML = function(escapedHTML) {\r\n\tvar result = '';\r\n\tif (!escapedHTML) return result;\r\n\r\n\treturn escapedHTML.replace(/&lt;/g,'<').replace(/&gt;/g,'>').replace(/&amp;/g,'&').replace(/&quot;/g,'\"');\r\n};\r\n\r\n// 保存に成功したらtrue、失敗したらfalse\r\nexports.downloadBinary = function(url, outFile, cb) {\r\n\r\n\t// 出力ファイル名を指定\r\n\tvar outFile = fs.createWriteStream(outFile);\r\n\r\n\t// ダウンロード開始\r\n\tvar req = http.get(url, function (res) {\r\n\r\n\t    // ダウンロードした内容をそのまま、ファイル書き出し。\r\n\t    res.pipe(outFile);\r\n\r\n\t\t// closeイベントを受けてファイルストリームをクローズ。\r\n\t\toutFile.on('close', function() {\r\n\t        outFile.close();\r\n\t        cb(true);\r\n\t\t});\r\n\r\n\t    // response終わったら\r\n\t    res.on('end', function () {\r\n\t        outFile.end();\r\n\t    });\r\n\t});\r\n\r\n\t// エラーがあれば扱う。\r\n\treq.on('error', function (err) {\r\n\t    console.log('Error: ', err);\r\n\t    cb(false);\r\n\t});\r\n};\r\n\r\n\r\nexports.createUniqueID = function() {\r\n\tvar randam = Math.ceil(Math.random()*1000);\r\n\tvar date = new Date();\r\n\tvar time = date.getTime();\r\n\treturn randam + time.toString();\r\n};\r\n\r\n\r\n// 数字を3桁区切りにする（文字列へ）\r\nexports.addComma = function(num) {\r\n\treturn String(num).replace( /(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1,');\r\n};\r\n\r\n\r\n// DBから取得したデータを整形する（参照渡し）\r\n// error時はcallback(err)を返す\r\nexports.prettyRows = function(rows) {\r\n\t// データ整形\r\n\t_.each(rows, function(row) {\r\n\t\t// 0: xvideos, 1: fc2\r\n\t\trow.site = exports.siteToChar(row.site);\r\n\t\trow.view = exports.addComma(row.view);\r\n\r\n\t\t// カテゴリを配列に直す。\r\n\t\tif (row.category_names) row.category_names = row.category_names.split(',');\r\n\t});\r\n};\r\n\r\n\r\n// urlをもとに判定\r\nvar isFC2 = function(url) {\r\n\treturn (url.indexOf('fc2.com') !== -1) ? true : false;\r\n};\r\nvar isXvideos = function(url) {\r\n\treturn (url.indexOf('xvideos.com') !== -1) ? true : false;\r\n};\r\nvar isXHamster = function(url) {\r\n\treturn (url.indexOf('xhamster.com') !== -1) ? true : false;\r\n};\r\nvar isEroVideo = function(url) {\r\n\treturn (url.indexOf('ero-video.net') !== -1) ? true : false;\r\n};\r\nvar isPornHub = function(url) {\r\n\treturn (url.indexOf('pornhub.com') !== -1) ? true : false;\r\n};\r\n// URLをもとにそれがどのサイトに当たるかを見る\r\nexports.getSiteTypeInt = function(url) {\r\n\tif (isXvideos(url)) return globalVar.SITE_XVIDEOS;\r\n\tif (isFC2(url)) return globalVar.SITE_FC2;\r\n\tif (isXHamster(url)) return globalVar.SITE_XHAMSTER;\r\n\tif (isEroVideo(url)) return globalVar.SITE_EROVIDEO;\r\n\tif (isPornHub(url)) return globalVar.SITE_PORNHUB;\r\n\r\n\treturn -1;\r\n};\r\n\r\n\r\n// （DBから取り出したInt⇒String変換に対して使う）siteを示す数字を文字列に\r\nexports.siteToChar = function(siteTypeInt) {\r\n\tvar result = '';\r\n\r\n\tswitch(siteTypeInt) {\r\n\t\tcase globalVar.SITE_XVIDEOS:\r\n\t\t\tresult = 'xvideos';\r\n\t\t\tbreak;\r\n\t\tcase globalVar.SITE_FC2:\r\n\t\t\tresult = 'fc2';\r\n\t\t\tbreak;\r\n\t\tcase globalVar.SITE_XHAMSTER:\r\n\t\t\tresult = 'xHamster';\r\n\t\t\tbreak;\r\n\t\tcase globalVar.SITE_EROVIDEO:\r\n\t\t\tresult = 'ero-video';\r\n\t\t\tbreak;\r\n\t\tcase globalVar.SITE_PORNHUB:\r\n\t\t\tresult = 'pornhub';\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n\r\n// siteTypeIntをもとにfetch先を切り分ける\r\nexports.fetchSite = function(siteTypeInt, url, videoData, cb) {\r\n\tswitch(siteTypeInt) {\r\n\t\tcase globalVar.SITE_XVIDEOS:\r\n\t\t\texports.fetchXvideos(url, videoData, cb);\r\n\t\t\tbreak;\r\n\t\tcase globalVar.SITE_FC2:\r\n\t\t\texports.fetchFC2(url, videoData, cb);\r\n\t\t\tbreak;\r\n\t\tcase globalVar.SITE_XHAMSTER:\r\n\t\t\texports.fetchXHamster(url, videoData, cb);\r\n\t\t\tbreak;\r\n\t\tcase globalVar.SITE_EROVIDEO:\r\n\t\t\texports.fetchEroVideo(url, videoData, cb);\r\n\t\t\tbreak;\r\n\t\tcase globalVar.SITE_PORNHUB:\r\n\t\t\texports.fetchPornHub(url, videoData, cb);\r\n\t\t\tbreak;\r\n\t}\r\n};\r\n\r\n\r\nexports.convertTermToQuery = function(term) {\r\n\tif (!term) term = 0; // fail safe\r\n\tvar termInt = term * 1; // Intへ\r\n\tvar result = '';\r\n\r\n\tswitch(termInt) {\r\n\t\tcase 0:\r\n\t\t\tresult = 'v.view';\r\n\t\t\tbreak;\r\n\t\tcase 604800:\r\n\t\t\tresult = 'v.weekly_view';\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn result;\r\n};\r\n\r\n// urlをもとにFC2からデータをFETCHしてくる\r\nexports.fetchFC2 = function(url, videoData, cb) {\r\n\tscrapingClient.fetch(url, {}, function (err, $, res) {\r\n\t\ttry {\r\n\t\t\t// サムネイルをpublic/img/thumbs/fc2/に保存\r\n\t\t\tvideoData.thumbUrl = $('meta[property=\"og:image\"]').attr('content');\r\n\t\t\t// console.log(\"サムネイルURL\", videoData.thumbUrl);\r\n\t\t\tif (!videoData.thumbUrl) return cb('サムネイルが正常に取得できませんでした');\r\n\r\n\t\t\t// EmbedTagを取得\r\n\t\t\tvideoData.embedTag = $('#watch_embed_code_new').text();\r\n\t\t\t// 上で取得できない場合に強引に埋め込み動画の取得を図る。\r\n\t\t\tif (!_.has(videoData, 'embedTag') || !videoData.embedTag) {\r\n\t\t\t\tvideoData.embedTag = $('#videoplayer').html();\r\n\t\t\t\tif (!videoData.embedTag) return cb('埋め込みタグが正常に取得できませんでした');\r\n\t\t\t\tvar before = '<div id=\"videoplayer\" class=\"content_block\">';\r\n\t\t\t\tvar after = '</div>';\r\n\t\t\t\t// FIXME ビデオプレイヤータグがとれないので仕方なく自分で着ける\r\n\t\t\t\tvideoData.embedTag = before + videoData.embedTag + after;\r\n\t\t\t}\r\n\t\t\t// console.log(videoData.embedTag);\r\n\r\n\t\t\t// 大きいサイズに差し替える\r\n\t\t\tvideoData.embedTag = videoData.embedTag.replace(/w=\".*?\"/, 'w=\"1280\"').replace(/h=\".*?\"/, 'h=\"784\"');\r\n\r\n\t\t\t// titleを取得\r\n\t\t\tvideoData.title = $('title').text();\r\n\r\n\t\t\tcb(null);\r\n\t\t} catch (e) {\r\n\t\t\tcb(e);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n// urlをもとにxvideosからデータをFETCHしてくる\r\nexports.fetchXvideos = function(url, videoData, cb) {\r\n\tscrapingClient.fetch(url, {}, function (err, $, res) {\r\n\t\ttry {\r\n\t\t\t// Lサイズを取得 embed->flashvars->url_bigthumb~.jpg の値を抽出すること\r\n\t\t\tvideoData.thumbUrl = $('embed').attr('flashvars').match(/url_bigthumb=(.*?\\.(jpg|png|gif))/)[1];\r\n\t\t\t// console.log(\"サムネイルURL\", videoData.thumbUrl);\r\n\t\t\tif (!videoData.thumbUrl) return cb('サムネイルが正常に取得できませんでした');\r\n\r\n\t\t\t// Embedを取得\r\n\t\t\tvideoData.embedTag = $('#tabEmbed input').attr('value');\r\n\t\t\t// console.log(videoData.embedTag);\r\n\t\t\tif (!videoData.embedTag) return cb('埋め込みタグが正常に取得できませんでした');\r\n\r\n\t\t\t// titleを取得\r\n\t\t\tvideoData.title = $('title').text();\r\n\r\n\t\t\tcb(null);\r\n\t\t} catch (e) {\r\n\t\t\tcb(e);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n// urlをもとにxHamsterからデータをFETCHしてくる\r\nexports.fetchXHamster = function(url, videoData, cb) {\r\n\tscrapingClient.fetch(url, {}, function (err, $, res) {\r\n\t\ttry {\r\n\t\t\tvideoData.thumbUrl = $('#player .mp4Thumb img').attr('src');\r\n\t\t\t// console.log(\"サムネイルURL\", videoData.thumbUrl);\r\n\t\t\tif (!videoData.thumbUrl) return cb('サムネイルが正常に取得できませんでした');\r\n\r\n\t\t\t// Embedを取得\r\n\t\t\tvideoData.embedTag = $('#shareBox .text textarea').html();\r\n\t\t\tif (!videoData.embedTag) return cb('埋め込みタグが正常に取得できませんでした');\r\n\r\n\t\t\t// titleを取得\r\n\t\t\tvideoData.title = $('title').text();\r\n\r\n\t\t\tcb(null);\r\n\t\t} catch (e) {\r\n\t\t\tcb(e);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n// TODO urlをもとにero-videoからデータをFETCHしてくる\r\nexports.fetchEroVideo = function(url, videoData, cb) {\r\n\tscrapingClient.fetch(url, {}, function (err, $, res) {\r\n\t\ttry {\r\n\t\t\t// TODO サムネイルを取得\r\n\r\n\t\t\t// Embedを取得\r\n\t\t\tvideoData.embedTag = $('#textarea-share-code').html();\r\n\t\t\tif (!videoData.embedTag) return cb('埋め込みタグが正常に取得できませんでした');\r\n\r\n\t\t\t// titleを取得\r\n\t\t\tvideoData.title = $('title').text();\r\n\r\n\t\t\tcb(null);\r\n\t\t} catch (e) {\r\n\t\t\tcb(e);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n// ( Use Public API ) urlをもとにpornhubからデータをFETCHしてくる\r\nexports.fetchPornHub = function(url, videoData, cb) {\r\n\tvar videoId = getQuerystring(url, 'viewkey');\r\n\tif (!videoId) return cb('videoIDが取得できませんでした');\r\n\r\n\t// IDをもとにビデオ情報をfetchする\r\n\tasync.parallel([\r\n\t\t// サムネイルとtitleを取得\r\n\t\tfunction(callback) {\r\n\t\t\tvar reqUri = 'http://www.pornhub.com/webmasters/video_by_id?id=' + videoId;\r\n\t\t\tvar req = http.get(reqUri, function (res) {\r\n\t\t\t\tvar body = '';\r\n\t\t\t\tres.setEncoding('utf8');\r\n\r\n\t\t\t\tres.on('data', function(chunk){\r\n\t\t\t\t\tbody += chunk; //console.log(body);←元データ\r\n\t\t\t\t});\r\n\t\t    res.on('end', function(res){\r\n\t\t      var json = JSON.parse(body);\r\n\r\n\t\t\t\t\t// サムネイル\r\n\t\t\t\t\tvideoData.thumbUrl = json.video.thumb;\r\n\t\t\t\t\t// title\r\n\t\t\t\t\tvideoData.title = json.video.title;\r\n\t\t\t\t\tcallback(null);\r\n\t\t    });\r\n\t\t\t});\r\n\t\t\treq.on('error', function (err) {\r\n\t\t    console.log('Error: ', err);\r\n\t\t    callback(err);\r\n\t\t\t});\r\n\t\t},\r\n\t\t// Embedタグを取得\r\n\t\tfunction(callback) {\r\n\t\t\tvar reqUri = 'http://www.pornhub.com/webmasters/video_embed_code?id=' + videoId;\r\n\t\t\tvar req = http.get(reqUri, function (res) {\r\n\t\t\t\tvar body = '';\r\n\t\t\t\tres.setEncoding('utf8');\r\n\r\n\t\t\t\tres.on('data', function(chunk){\r\n\t\t\t\t\tbody += chunk;\r\n\t\t\t\t});\r\n\t\t    res.on('end', function(res){\r\n\t\t      var json = JSON.parse(body);\r\n\r\n\t\t\t\t\tvideoData.embedTag = unescapeHTML(json.embed.code);\r\n\t\t\t\t\tcallback(null);\r\n\t\t    });\r\n\t\t\t});\r\n\t\t\treq.on('error', function (err) {\r\n\t\t    console.log('Error: ', err);\r\n\t\t    callback(err);\r\n\t\t\t});\r\n\t\t}\r\n\t], function(err, results) {\r\n\t\tif (err) return cb(err);\r\n\t\tcb(null);\r\n\t});\r\n};\r\n","markers":{"markers":{"1":{"id":1,"range":[[19,38],[19,38]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":16,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"},"534":{"id":534,"range":[[9,0],[9,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"535":{"id":535,"range":[[10,0],[10,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"536":{"id":536,"range":[[11,0],[11,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"537":{"id":537,"range":[[13,0],[13,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"538":{"id":538,"range":[[82,0],[82,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"539":{"id":539,"range":[[182,0],[182,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"540":{"id":540,"range":[[217,0],[217,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"541":{"id":541,"range":[[241,0],[241,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"542":{"id":542,"range":[[263,0],[263,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"543":{"id":543,"range":[[298,0],[298,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"544":{"id":544,"range":[[323,0],[323,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"545":{"id":545,"range":[[335,0],[335,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"546":{"id":546,"range":[[307,6],[307,6]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"609":{"id":609,"range":[[9,0],[9,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"610":{"id":610,"range":[[10,0],[10,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"611":{"id":611,"range":[[11,0],[11,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"612":{"id":612,"range":[[13,0],[13,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"613":{"id":613,"range":[[82,0],[82,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"617":{"id":617,"range":[[223,0],[223,0]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"825":{"id":825,"range":[[9,0],[9,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"826":{"id":826,"range":[[10,0],[10,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"827":{"id":827,"range":[[11,0],[11,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"828":{"id":828,"range":[[13,0],[13,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"829":{"id":829,"range":[[82,0],[82,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"830":{"id":830,"range":[[182,0],[182,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"831":{"id":831,"range":[[217,0],[217,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"832":{"id":832,"range":[[241,0],[241,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"833":{"id":833,"range":[[263,0],[263,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"834":{"id":834,"range":[[298,0],[298,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"835":{"id":835,"range":[[323,0],[323,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"},"836":{"id":836,"range":[[335,0],[335,1]],"tailed":true,"reversed":false,"valid":true,"invalidate":"overlap","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"c:\\Users\\LESANC~1\\AppData\\Local\\Temp\\scp21914\\home\\ec2-user\\webapp\\utils\\ay.js","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"9e3e1de32a2b437fc33b3993cde5e8b21da653ea","deserializer":"TextBuffer"},{"text":"{\r\n\t// 参考：http://qiita.com/maccotsan/items/0fb82ccab014f49ff95d\r\n\t// Enforcing options\r\n\t\"bitwise\"       : false,\r\n\t\"camelcase\"     : true,\r\n\t\"curly\"         : false,\r\n\t\"eqeqeq\"        : true,\r\n\t\"es3\"           : false,\r\n\t\"forin\"         : true,\r\n\t\"freeze\"        : true,\r\n\t\"immed\"         : true,\r\n\t\"indent\"        : 2,\r\n\t\"latedef\"       : true,\r\n\t\"newcap\"        : true,\r\n\t\"noarg\"         : true,\r\n\t\"noempty\"       : true,\r\n\t\"nonbsp\"        : false,\r\n\t\"nonew\"         : true,\r\n\t\"plusplus\"      : false,\r\n\t\"quotmark\"      : \"single\",\r\n\t\"undef\"         : true,\r\n\t\"unused\"        : true,\r\n\t//\"strict\"        : true,\r\n\t\"trailing\"      : true,\r\n\t//\"maxparams\"     : 5,\r\n\t\"maxdepth\"      : 5,\r\n\t//\"maxstatements\" : 10,\r\n\t//\"maxcomplexity: : 10,\r\n\t//\"maxlen\"        : 100,\r\n\r\n\t// Relaxing options\r\n\t\"asi\"           : false,\r\n\t\"boss\"          : false,\r\n\t\"debug\"         : false,\r\n\t\"eqnull\"        : false,\r\n\t\"esnext\"        : false,\r\n\t\"evil\"          : false,\r\n\t\"expr\"          : true,\r\n\t\"funcscope\"     : false,\r\n\t\"globalstrict\"  : false,\r\n\t\"iterator\"      : false,\r\n\t\"lastsemic\"     : false,\r\n\t\"laxbreak\"      : false,\r\n\t\"laxcomma\"      : false,\r\n\t\"loopfunc\"      : false,\r\n\t\"maxerr\"        : 100,\r\n\t\"moz\"           : false,\r\n\t\"multistr\"      : false,\r\n\t\"notypeof\"      : false,\r\n\t\"proto\"         : false,\r\n\t\"scripturl\"     : false,\r\n\t\"smarttabs\"     : false,\r\n\t\"shadow\"        : true,\r\n\t\"sub\"           : true,\r\n\t\"supernew\"      : false,\r\n\t\"validthis\"     : false,\r\n\t\"noyield\"       : false,\r\n\r\n\t// Environments\r\n\t\"browser\"       : true,\r\n\t\"couch\"         : false,\r\n\t\"devel\"         : true,\r\n\t\"dojo\"          : false,\r\n\t\"jquery\"        : true,\r\n\t\"mootools\"      : false,\r\n\t\"node\"          : true,\r\n\t\"nonstandard\"   : false,\r\n\t\"phantom\"       : false,\r\n\t\"prototypejs\"   : false,\r\n\t\"rhino\"         : false,\r\n\t\"worker\"        : true,\r\n\t\"wsh\"           : false,\r\n\t\"yui\"           : false,\r\n\t\"globals\": {\r\n\t\t//\"_\": false // underscoreは例外\r\n\t}\r\n}\r\n","markers":{"markers":{"1":{"id":1,"range":[[21,23],[21,23]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":20,"goalBufferRange":null,"preserveFolds":true},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"encoding":"utf8","filePath":"c:\\Users\\LesanceDtAY\\.jshintrc","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"07f7167dc0a98c91c9a2f8675772115a791055a2","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"deserializer":"SettingsView","version":2,"activePanelName":"Keybindings","uri":"atom://config"},{"id":20,"softTabs":false,"displayBuffer":{"id":21,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"c:\\Users\\LesanceDtAY\\.jshintrc","invisibles":{"cr":" ","eol":" ","space":"·","tab":"»"},"deserializer":"TokenizedBuffer"},"invisibles":{"cr":" ","eol":" ","space":"·","tab":"»"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":4,"softTabs":false,"displayBuffer":{"id":5,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"c:\\Users\\LESANC~1\\AppData\\Local\\Temp\\scp15188\\home\\ec2-user\\webapp\\routes\\index.js","invisibles":{"cr":" ","eol":" ","space":"·","tab":"»"},"deserializer":"TokenizedBuffer"},"invisibles":{"cr":" ","eol":" ","space":"·","tab":"»"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":16,"softTabs":true,"displayBuffer":{"id":17,"softWrapped":true,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"c:\\Users\\LESANC~1\\AppData\\Local\\Temp\\scp21914\\home\\ec2-user\\webapp\\utils\\ay.js","invisibles":{"cr":" ","eol":" ","space":"·","tab":"»"},"deserializer":"TokenizedBuffer"},"invisibles":{"cr":" ","eol":" ","space":"·","tab":"»"},"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemUri":"c:\\Users\\LESANC~1\\AppData\\Local\\Temp\\scp15188\\home\\ec2-user\\webapp\\routes\\index.js","focused":true,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-json","language-javascript","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false,"wholeWord":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["smarttabs"],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"c:\\Users\\LesanceDtAY\\.jshintrc":1418531689498,"c:\\Users\\LESANC~1\\AppData\\Local\\Temp\\scp15188\\home\\ec2-user\\webapp\\routes\\index.js":1418531691901,"c:\\Users\\LESANC~1\\AppData\\Local\\Temp\\scp21914\\home\\ec2-user\\webapp\\utils\\ay.js":1418531477864},"keybinding-resolver":{},"metrics":{"sessionLength":235495},"tree-view":{"directoryExpansionStates":{},"selectedPath":"c:\\Users\\LESANC~1\\AppData\\Local\\Temp\\scp15188\\home\\ec2-user\\webapp\\routes\\index.js","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":0}}}